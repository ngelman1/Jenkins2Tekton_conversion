# apply-transformation-task.yaml
apiVersion: tekton.dev/v1
kind: Task
metadata:
  name: apply-transformation-task
spec:
  params:
    - name: default-message
      description: The base message to transform.
      type: string
      default: "The quick brown fox jumps over the lazy dog." # Default from Jenkins env
    - name: case-option
      description: 'Choose how to transform the message: uppercase or lowercase'
      type: string
      default: "uppercase" # Default from Jenkins choice parameter, picking one
      # Tekton doesn't enforce 'choice' but you can document allowed values
      # allowedValues: ["uppercase", "lowercase"] # This is just a comment, not enforced by Tekton spec
  results:
    - name: final-message
      description: The transformed message.
  steps:
    - name: transform-message
      image: bash:latest # Use a bash image for string manipulation
      script: |
        #!/usr/bin/env bash
        DEFAULT_MSG="$(params.default-message)"
        CASE_OPT="$(params.case-option)"
        TRANSFORMED_MSG=""

        echo "Applying transformation based on option: ${CASE_OPT}"

        if [[ "${CASE_OPT}" == "uppercase" ]]; then
          TRANSFORMED_MSG=$(echo "${DEFAULT_MSG}" | tr '[:lower:]' '[:upper:]')
        elif [[ "${CASE_OPT}" == "lowercase" ]]; then
          TRANSFORMED_MSG=$(echo "${DEFAULT_MSG}" | tr '[:upper:]' '[:lower:]')
        else
          TRANSFORMED_MSG="${DEFAULT_MSG}" # fallback
        fi

        echo "Transformed Message: ${TRANSFORMED_MSG}"
        # Write the transformed message to the TaskResult path
        echo -n "${TRANSFORMED_MSG}" > "$(results.final-message.path)"